(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{251:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"单页面应用路由机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单页面应用路由机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 单页面应用路由机制")]),t._v(" "),a("p",[t._v("单页面应用路由机制的实现方案：")]),t._v(" "),a("ul",[a("li",[t._v("利用 URL 的 Hash（"),a("code",[t._v("#")]),t._v("）")]),t._v(" "),a("li",[t._v("利用 HTML5 新增方法 History Interface")])]),t._v(" "),a("h2",{attrs:{id:"hash-路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash-路由","aria-hidden":"true"}},[t._v("#")]),t._v(" Hash 路由")]),t._v(" "),a("p",[t._v("在  HTML5  还没有流行开来时，一般  SPA 都采用  URL  的 "),a("code",[t._v("hash(#)")]),t._v("  作为锚点，获取到 "),a("code",[t._v("#")]),t._v(" 之后的值，并监听其改变，再进行渲染对应的子页面。当改变锚点时，页面的主体部分会切换内容，但是整个页面不会被重新刷新。")]),t._v(" "),a("p",[t._v("🌰 "),a("strong",[t._v("标准示例：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// url => http://localhost:8080/#/mrsingsing")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '#/mrsingsing'")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("了解更多关于 "),a("a",{attrs:{href:"https://tsejx.github.io/JavaScript-Guidebook/browser-object-model/the-location-object/the-location-object-properties.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Location 对象"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("根据获取到的信息，通过 Window 对象下用于监听 "),a("code",[t._v("hash")]),t._v(" 变化的方法 "),a("code",[t._v("onhashchange")]),t._v(" 触发相关事件程序。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashChange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("载入不同页面的方式：")])]),t._v(" "),a("ul",[a("li",[t._v("寻找 DOM 节点并改变视图")]),t._v(" "),a("li",[t._v("加载（"),a("code",[t._v("import")]),t._v("）脚本文件，文件内部导出（"),a("code",[t._v("export")]),t._v("）模版字符串")]),t._v(" "),a("li",[t._v("利用 AJAX 加载对应的 HTML 模版")])]),t._v(" "),a("h3",{attrs:{id:"加载脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载脚本","aria-hidden":"true"}},[t._v("#")]),t._v(" 加载脚本")]),t._v(" "),a("p",[t._v("定义一个 JavaScript 脚本文件。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`\n\t<div>\n\t\tHello world!\n\t</div>\n`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在主文件通过 import 导入。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Initial View!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换挂载节点的内部 HTML")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTMl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听 hash 发生改变时，变更挂载节点的内部 HTML")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hashChange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTMl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("在首次进入页面的时候，如果 URL 上已经带有 Hash，那么也会触发一次 "),a("code",[t._v("onhashchange")]),t._v(" 事件，这保证了一开始的 Hash 就能被识别。")]),t._v(" "),a("p",[t._v("使用的 Hash 实现路由机制固然不错，但是问题是实在太丑，如果在微信或者其他不显示 URL  的 Mobile APP  中使用，倒也无所谓，但是如果在一般的浏览器中使用就会遇到问题了。")]),t._v(" "),a("h2",{attrs:{id:"history-路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-路由","aria-hidden":"true"}},[t._v("#")]),t._v(" History 路由")]),t._v(" "),a("h3",{attrs:{id:"往返缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#往返缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 往返缓存")]),t._v(" "),a("p",[t._v("默认情况下，浏览器会缓存当前会话页面，这样当下一个页面点击后退按钮，或前一个页面点击前进按钮，浏览器便会从缓存中提取并加载此页面，这个特性被称为 "),a("b",{staticStyle:{color:"red"}},[t._v("往返缓存")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("往返缓存会保留页面数据、DOM 和 JavaScript 状态，实际上是将整个页面完好无缺地保留。")])]),t._v(" "),a("h3",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("早期 History 对象，提供了一些用于页面跳转的方法。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进两页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后退一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后退一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 HTML5 中，浏览器 History 对象新增几个操作浏览历史状态栈的 API。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加新的状态到浏览历史状态栈")]),t._v("\nhistoy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用新的状态替换当前浏览历史状态栈")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回当前状态对象")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 历史状态栈发生变更时触发")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popstate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("具体实现方式和 API 参数参阅 "),a("a",{attrs:{href:"https://tsejx.github.io/JavaScript-Guidebook/browser-object-model/the-history-object/the-history-object-methods.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("History 对象的方法"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("history.pushState")]),t._v(" 或者 "),a("code",[t._v("history.replaceState")]),t._v("也能实现改变 URL 的同时，不会刷新页面。所以 History 也具备实现路由控制的能力。然而，Hash 的改变会触发 "),a("code",[t._v("onhashchange")]),t._v(" 事件，History 的改变并不会触发任何事件。")]),t._v(" "),a("p",[t._v("尽管无法监听 History 的改变事件，但是我们可以罗列可能改变 History 的途径，然后在这些途径逐一拦截，手动实现对 History 的监听。")]),t._v(" "),a("p",[t._v("对于一个 Web 应用来说，URL 改变只能由以下三种途径引起：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("点击浏览器的前进或后退按钮")])]),t._v(" "),a("li",[a("p",[t._v("点击 "),a("code",[t._v("<a>")]),t._v(" 链接标签")])]),t._v(" "),a("li",[a("p",[t._v("在 JavaScript 代码中直接修改路由")])])]),t._v(" "),a("p",[t._v("第 2、3 种情况可视为同类型场景，因为 "),a("code",[t._v("<a>")]),t._v(" 标签的默认事件可以被禁止，进而使用 JavaScript 相关方法。关键是第一种，HTML5 规范中新增一个 onpopstate 事件，通过它便可以监听到前进或后退按钮的点击。")]),t._v(" "),a("p",[t._v("需要特别注意的是：调用 "),a("code",[t._v("history.pushState")]),t._v(" 和 "),a("code",[t._v("history.replaceState")]),t._v(" 并不会触发 onpopstate 事件。")]),t._v(" "),a("h2",{attrs:{id:"总结归纳"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结归纳","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结归纳")]),t._v(" "),a("p",[t._v("一般场景下，Hash 路由和 History 路由都可以，除非你更在意颜值，"),a("code",[t._v("#")]),t._v(" 符号夹杂在 "),a("code",[t._v("URL")]),t._v(" 里看起来确实有些不太美观。")]),t._v(" "),a("p",[t._v("两种实现方式的对比：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("History 路由")]),t._v(" "),a("th",[t._v("Hash 路由")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("可设置同源 URL 的任意路径")]),t._v(" "),a("td",[t._v("只可设置同源 URL 的 "),a("code",[t._v("#")]),t._v(" 后面部分")])]),t._v(" "),a("tr",[a("td",[t._v("URL 相同也会添加记录到栈中")]),t._v(" "),a("td",[t._v("只有 Hash 值变化才会触发 "),a("code",[t._v("onhashchange")])])]),t._v(" "),a("tr",[a("td",[t._v("可以添加任意类型数据到记录中")]),t._v(" "),a("td",[t._v("只可添加短字符")])]),t._v(" "),a("tr",[a("td",[t._v("可额外设置 "),a("code",[t._v("title")]),t._v(" 属性")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("尽管从上述对比中 History 路由比 Hash 路由优越不少，但是当通过 URL 向后端发起 HTTP 请求时，两者的差异就来了。尤其在用户手动输入 URL 后回车，或者刷新（重启）浏览器的时候。")]),t._v(" "),a("p",[t._v("Hash 路由模式下，仅 Hash 符号（"),a("code",[t._v("#")]),t._v("）之前内容会被包含在请求中，因此对于后端来说，即使没有做到对路由的全覆盖，也不会返回 404 错误。")]),t._v(" "),a("p",[t._v("History 路由模式下，前端 URL 必须和实际向后端发起请求的 URL 一致。若后端缺少对路径部分的路由处理，将返回 404 错误。")])])},[],!1,null,null,null);s.default=e.exports}}]);