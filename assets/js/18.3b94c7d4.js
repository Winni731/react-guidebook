(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{258:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-特性","aria-hidden":"true"}},[t._v("#")]),t._v(" React 特性")]),t._v(" "),s("p",[t._v("React 的三大特性：")]),t._v(" "),s("ul",[s("li",[t._v("数据驱动 => 单向数据流")]),t._v(" "),s("li",[t._v("函数式编程 => 组件化 + JSX")]),t._v(" "),s("li",[t._v("虚拟 DOM => 跨平台")])]),t._v(" "),s("h2",{attrs:{id:"数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),s("h3",{attrs:{id:"数据驱动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据驱动")]),t._v(" "),s("p",[t._v("在 React 中，一切皆数据。要想改变界面元素，或者更改 DOM 节点，只需修改数据即可。")]),t._v(" "),s("blockquote",[s("p",[t._v("切记：在 React 中不要操作 DOM 节点")])]),t._v(" "),s("h3",{attrs:{id:"state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state","aria-hidden":"true"}},[t._v("#")]),t._v(" State")]),t._v(" "),s("p",[t._v("React 的数据，所有的数据都用 "),s("code",[t._v("state")]),t._v(" 来管理。")]),t._v(" "),s("p",[t._v("分为组件 "),s("code",[t._v("state")]),t._v(" 和全局 "),s("code",[t._v("state")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"单向数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单向数据流","aria-hidden":"true"}},[t._v("#")]),t._v(" 单向数据流")]),t._v(" "),s("p",[t._v("数据只能从 State 流向 DOM，不能逆向更改。")]),t._v(" "),s("h2",{attrs:{id:"程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序","aria-hidden":"true"}},[t._v("#")]),t._v(" 程序")]),t._v(" "),s("h3",{attrs:{id:"声明式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明式编程","aria-hidden":"true"}},[t._v("#")]),t._v(" 声明式编程")]),t._v(" "),s("p",[s("code",[t._v("命令式 => 声明式编程（函数式编程）")])]),t._v(" "),s("p",[t._v("纯函数：函数的输出不受外部环境影响，同时也不影响外部环境。例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("非纯函数：输入相同，输出不同的函数。例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("函数的柯里化：将一个低阶函数转换为高阶函数的过程。例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" arg3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件化开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件化开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件化开发")]),t._v(" "),s("p",[t._v("把数据组织起来的表现形式。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'My Component'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"jsx-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsx-语法","aria-hidden":"true"}},[t._v("#")]),t._v(" JSX 语法")]),t._v(" "),s("p",[t._v("在 JavaScript 中可以编辑 HTML 片段。")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("我也是一个组件")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"客户端和服务端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端和服务端渲染","aria-hidden":"true"}},[t._v("#")]),t._v(" 客户端和服务端渲染")]),t._v(" "),s("p",[t._v("把代码拉取到客户端，再编译执行的方式就是客户端渲染。这种方式是无法支持 SEO 的，所有就有了服务端渲然，在服务端提前渲然成静态 HTML 页面。")]),t._v(" "),s("p",[t._v("第三方服务端渲染库："),s("a",{attrs:{href:"https://nextjs.org/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Next.js"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能","aria-hidden":"true"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),s("p",[t._v("每次数据更新后，重新计算 Virtual DOM，并和上一次生成的 Virtual DOM 做对比，对发生变化的部分做"),s("strong",[t._v("批量更新")]),t._v("。React 也提供了直观的 "),s("strong",[t._v("shouldComponentUpdate")]),t._v(" 生命周期回调函数，来减少数据变化后不必要的 Virtual DOM 对比过程，以保证性能。")]),t._v(" "),s("h3",{attrs:{id:"virtual-dom-虚拟节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom-虚拟节点","aria-hidden":"true"}},[t._v("#")]),t._v(" Virtual DOM 虚拟节点")]),t._v(" "),s("p",[t._v("虚拟 DOM 顾名思义不是真实的 DOM，它不需要浏览器的 DOM API 支持。虚拟 DOM 是在 DOM 的基础上建立一个抽象层，其实质是一个 JavaScript 对象，当数据和状态发生了变化，都会被自动高效的同步到虚拟 DOM 中，"),s("strong",[t._v("最后再将仅变化的部分同步到真实 DOM 中")]),t._v("。")]),t._v(" "),s("p",[t._v("将 DOM 抽象成一个 JavaScript 对象，例如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ulist'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是第一个List元素'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'second'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是第二个List元素'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法","aria-hidden":"true"}},[t._v("#")]),t._v(" Diff 算法")]),t._v(" "),s("p",[t._v("将虚拟 DOM 转化为真实 DOM 的算法。分为三级：Tree Diff、Component Diff、Element Diff。")])])},[],!1,null,null,null);a.default=r.exports}}]);