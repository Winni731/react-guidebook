(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{255:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"jest"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jest","aria-hidden":"true"}},[e._v("#")]),e._v(" Jest")]),e._v(" "),n("p",[e._v("Jest 是由 Facebook 开源的 React 单元测试框架，内部 DOM 操作基于 JSDOM，语法和断言基于 Jasmine 框架。")]),e._v(" "),n("p",[n("strong",[e._v("特点：")])]),e._v(" "),n("ul",[n("li",[e._v("自动找到测试")]),e._v(" "),n("li",[e._v("自动 mock 模拟依赖包，达到单元测试的目的")]),e._v(" "),n("li",[e._v("并不需要真实 DOM 环境执行，而是 JSDOM 模拟的 DOM")]),e._v(" "),n("li",[e._v("多进程并行执行测试")])]),e._v(" "),n("p",[e._v("当使用 Jest 来测试 React 组件时，还要引入 "),n("code",[e._v("react-addons-test-utils")]),e._v(" 插件，用于模拟浏览器事件 和对 DOM 进行校验。")]),e._v(" "),n("p",[e._v("它提供的常用方法如下：")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("Simulate.{eventName} (DOMElement element, [object eventData])")]),e._v("：模拟触发事件。")]),e._v(" "),n("li",[n("code",[e._v("renderIntoDocument(ReactElement instance)")]),e._v("：渲染 React 组件到文档中，这里的文档节点由 JSDOM 提供。")]),e._v(" "),n("li",[n("code",[e._v("findRenderDOMComponentWithClass(ReactComponent tree, string className)")]),e._v("：从渲染的 DOM 树中查找含有 class 的节点。")]),e._v(" "),n("li",[n("code",[e._v("findRenderDOMComponentWithTag(ReactComponent tree, function componentClass)")]),e._v("：从渲染的 DOM 树中找到指定组件的节点。")])])])},[],!1,null,null,null);t.default=s.exports}}]);