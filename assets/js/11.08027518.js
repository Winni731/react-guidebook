(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{184:function(t,a,s){t.exports=s.p+"assets/img/react-router-workflow.05a99c39.png"},253:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"react-router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-router","aria-hidden":"true"}},[t._v("#")]),t._v(" React Router")]),t._v(" "),n("p",[t._v("React Router 是一个构建在 React 之上的强大的路由库，它有助于向应用程序添加新的 Screen 和 Stream。这使 URL 与网页显示的数据保持同步。它负责维护标准化的结构和行为，并用于开发单页 Web 应用。")]),t._v(" "),n("p",[t._v("React Router v4 基于 Lerna 管理多个 Repository")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("react-router React Router 核心仓库")]),t._v(" "),n("li",[t._v("react-router-dom 用于 DOM 绑定的 React Router")]),t._v(" "),n("li",[t._v("react-router-native 用于 React Native 的 React Router")]),t._v(" "),n("li",[t._v("react-router-redux React Router 和 Redux 集成")]),t._v(" "),n("li",[t._v("react-router-config 静态路由配置帮助助手")])])]),t._v(" "),n("h2",{attrs:{id:"插件初插入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插件初插入","aria-hidden":"true"}},[t._v("#")]),t._v(" 插件初插入")]),t._v(" "),n("ul",[n("li",[t._v("react-router")]),t._v(" "),n("li",[t._v("react-router-dom 比前者多了 "),n("code",[t._v("<Link>")]),t._v(" "),n("code",[t._v("<BrowserRouter>")]),t._v(" 这样的 DOM 类组件")])]),t._v(" "),n("p",[t._v("如果搭配 Redux 还需要 "),n("code",[t._v("react-router-redux")])]),t._v(" "),n("h2",{attrs:{id:"基本组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本组件")]),t._v(" "),n("ul",[n("li",[t._v("router 组件（"),n("code",[t._v("<BrowserRouter>")]),t._v("、"),n("code",[t._v("<HashRouter>")]),t._v("）")]),t._v(" "),n("li",[t._v("route matching 组件（"),n("code",[t._v("<Route>")]),t._v("、"),n("code",[t._v("<Switch>")]),t._v("）")]),t._v(" "),n("li",[t._v("navigation 组件（"),n("code",[t._v("<Link>")]),t._v("、"),n("code",[t._v("<NavLink>")]),t._v("）")])]),t._v(" "),n("h3",{attrs:{id:"router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#router","aria-hidden":"true"}},[t._v("#")]),t._v(" Router")]),t._v(" "),n("p",[t._v("Router 时所有路由组件共用的底层接口，一般我们的应用不会使用这个接口，而是使用高级的路由")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<BrowserRouter/>")]),t._v(" 使用 HTML5 提供的 history API 保持 UI 和 URL 同步")]),t._v(" "),n("li",[n("code",[t._v("<HashRouter/>")]),t._v(" 使用 URL 的 hash 保持 UI 和 URL 的同步")]),t._v(" "),n("li",[n("code",[t._v("<MemoryRouter>")]),t._v(' 能在内存保存你 "URL" 的历史记录（并没有地址栏读写）')]),t._v(" "),n("li",[n("code",[t._v("<NativeRouter>")]),t._v(" 为使用 React Native 提供路由支持")]),t._v(" "),n("li",[n("code",[t._v("<StaticRouter>")]),t._v(" 从不会改变地址")])]),t._v(" "),n("blockquote",[n("p",[t._v("⚠️ 与之前的 Router 不一样，这里 "),n("code",[t._v("<Router>")]),t._v(" 组件下只允许存在一个字元素，如果存在多个则会报错。")])]),t._v(" "),n("h3",{attrs:{id:"路由匹配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 路由匹配")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<Route>")])]),t._v(" "),n("li",[n("code",[t._v("<Switch>")])])]),t._v(" "),n("p",[n("code",[t._v("<Route>")]),t._v(" 组件有如下属性：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("path")]),t._v(" "),n("td",[t._v("路由匹配路径（没有 path 属性的 "),n("code",[t._v("<Route>")]),t._v(" 总是会匹配）")]),t._v(" "),n("td",[t._v("string")])]),t._v(" "),n("tr",[n("td",[t._v("exact")]),t._v(" "),n("td",[t._v("为 "),n("code",[t._v("true")]),t._v(" 时，则要求路径与 "),n("code",[t._v("location.pathname")]),t._v(" 必须"),n("strong",[t._v("完全匹配")])]),t._v(" "),n("td",[t._v("bool")])]),t._v(" "),n("tr",[n("td",[t._v("strict")]),t._v(" "),n("td",[t._v("为 "),n("code",[t._v("true")]),t._v(" 的时候，有"),n("strong",[t._v("结尾斜线")]),t._v("的路径只能匹配有斜线的")]),t._v(" "),n("td",[t._v("bool")])])])]),t._v(" "),n("p",[n("strong",[t._v("exact 配置：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("路径")]),t._v(" "),n("th",[t._v("location.pathname")]),t._v(" "),n("th",[t._v("exact")]),t._v(" "),n("th",[t._v("是否匹配")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("/one")]),t._v(" "),n("td",[t._v("/one/two")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("/one")]),t._v(" "),n("td",[t._v("/one/two")]),t._v(" "),n("td",[t._v("false")]),t._v(" "),n("td",[t._v("是")])])])]),t._v(" "),n("p",[n("strong",[t._v("strict 配置：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("路径")]),t._v(" "),n("th",[t._v("location.pathname")]),t._v(" "),n("th",[t._v("strict")]),t._v(" "),n("th",[t._v("是否匹配")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("/one/")]),t._v(" "),n("td",[t._v("/one")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("/one/")]),t._v(" "),n("td",[t._v("/one/")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("/one/")]),t._v(" "),n("td",[t._v("/one/two")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("是")])])])]),t._v(" "),n("p",[t._v("路由匹配是通过将 "),n("code",[t._v("<Route>")]),t._v(" 组件的 path 属性与当前的 location 的 pathname 进行比较来完成的。当一个 "),n("code",[t._v("<Route>")]),t._v(" 匹配了，它所对应的组件内容将被渲染出来。 不匹配，则渲染 null。如果一个 "),n("code",[t._v("<Route>")]),t._v(" 没有 path 属性，他的组件对应内容将一直被渲染出来。")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当 location = { pathname: '/about' }")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径匹配成功，渲染 <About/> 组件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/about"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("About"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径不匹配，渲染 null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该组件没有path属性，其对应的 <Always/> 组件会一直渲染")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Always"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),n("p",[t._v("我们可以在组件树的任何位置放置 "),n("code",[t._v("<Route>")]),t._v(" 组件。但是更常见的情况是将几个 "),n("code",[t._v("<Route>")]),t._v(" 写在一起。"),n("code",[t._v("<Switch>")]),t._v(" 组件可以用来将多个 "),n("code",[t._v("<Route>")]),t._v(" 包裹”在一起。")]),t._v(" "),n("p",[t._v("多个组件在一起使用时，并不强制要求使用 "),n("code",[t._v("<Switch>")]),t._v(" 组件，但是使用 "),n("code",[t._v("<Switch>")]),t._v(" 组件却是非常便利的。"),n("code",[t._v("<Switch>")]),t._v(" 会迭代它下面的所有 "),n("code",[t._v("<Route>")]),t._v(" 子组件，并只渲染第一个路径匹配的 "),n("code",[t._v("<Route>")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("exact")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Home"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/about"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("About"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("exact")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Home"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/about"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("About"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Contact"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 如果上面的Route的路径都没有匹配上，则 <NoMatch>被渲染，我们可以在此组件中返回404 */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("NoMatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Switch")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h3",{attrs:{id:"route-rendering-props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#route-rendering-props","aria-hidden":"true"}},[t._v("#")]),t._v(" Route Rendering Props")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("component")]),t._v(" 在地址匹配的时候 React 的组件才会被渲染，route props 也会随着一起被渲染")]),t._v(" "),n("li",[n("code",[t._v("render")]),t._v(" 这种方式对于内联渲染和包装组件却不引起意料之外的重新挂载特别方便")]),t._v(" "),n("li",[n("code",[t._v("children")]),t._v(" 与 render 属性的工作方式基本一样，除了它是不管地址匹配与否都会被调用")])]),t._v(" "),n("p",[n("strong",[t._v("component")])]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/user/:username"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("User")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" match "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Hello ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("⚠️ 不要将 component 属性设置为一个函数，然后在其内部渲染组件。这样会导致已经存在的组件被卸载，然后重写创建一个新组件，而不是仅仅对组件进行更新。")])]),t._v(" "),n("p",[n("strong",[t._v("render")])]),t._v(" "),n("p",[t._v("render 方法直接使用一个内联函数来渲染内容。")]),t._v(" "),n("div",{staticClass:"language-jsx extra-class"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// convenient inline rendering")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Route")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/home"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Home")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),n("p",[n("code",[t._v("<Route component>")]),t._v(" 的优先级要比 "),n("code",[t._v("<Route render>")]),t._v(" 高，所以不要在同一个 "),n("code",[t._v("<Route>")]),t._v(" 中同时使用两个属性")]),t._v(" "),n("h3",{attrs:{id:"navigation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#navigation","aria-hidden":"true"}},[t._v("#")]),t._v(" Navigation")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("<Link>")]),t._v(" 用于添加 link")]),t._v(" "),n("li",[n("code",[t._v("<NavLink>")]),t._v(" 当它的 path 与 location 匹配时，可以自定义其样式表示当前页面位置")]),t._v(" "),n("li",[n("code",[t._v("<Redirect>")]),t._v(" 页面重定向，被渲染时将被渲染到该组件 to 属性指定的位置上")])]),t._v(" "),n("h2",{attrs:{id:"实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),n("h3",{attrs:{id:"history-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#history-实现","aria-hidden":"true"}},[t._v("#")]),t._v(" History 实现")]),t._v(" "),n("p",[n("img",{attrs:{src:s(184),alt:"React Router Workflow"}})]),t._v(" "),n("hr"),t._v(" "),n("p",[n("strong",[t._v("参考资料：")])]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/youngwind/blog/issues/109",target:"_blank",rel:"noopener noreferrer"}},[t._v("单页面应用路由实现原理：以 React-Router 为例"),n("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=e.exports}}]);